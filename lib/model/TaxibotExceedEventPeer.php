<?php
require 'lib/model/om/BaseTaxibotExceedEventPeer.php';

/**
 * Skeleton subclass for performing query and update operations on the 'taxibot_exceed_event' table.
 *
 * TaxibotExceedEvent
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Sep 11 13:13:07 2013
 *
 * You should add additional methods to this class to meet the
 * application requirements. This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package lib.model
 */
class TaxibotExceedEventPeer extends BaseTaxibotExceedEventPeer {
	
	public static function updateMissionId($fromMissionId, $toMissionId) {
		$connection = Propel::getConnection ();
		$query = 'UPDATE `taxibot_exceed_event` SET `mission_id`= ' . $toMissionId . ' WHERE `mission_id` = ' . $fromMissionId;
		$statement = $connection->prepare ( $query );
		$statement->execute ();
	}
	public static function insertMultiple($items, $missionId) {
		if(count($items) == 0){return ;}
		$connection = Propel::getConnection ();
		$query = 'INSERT INTO `taxibot_exceed_event`(`exceed_type`, `start_time`, `end_time`, `start_milisecond`,  `end_milisecond`,`duration`, `mission_id`, `latitude`, `longitude`) VALUES ';
		
		foreach ( $items as $item ) {			
			$partquery = '(';
			$partquery .= "'" . $item->getExceedType() . "',";
			$partquery .= "'" . $item->getStartTime() . "',";
			$partquery .= "'" . $item->getEndTime() . "',";
			$partquery .= $item->getStartMilisecond() . ",";
			$partquery .= $item->getEndMilisecond() . ",";
			$partquery .= "'" . $item->getDuration() . "',";
			$partquery .= $missionId . ",";
			$partquery .= $item->getLatitude(). ",";
			$partquery .= $item->getLongitude();
			$partquery .= '),';
			$query.= $partquery;	
		}
		/* print "<pre>";
		//print_r ( $query );
		print "</pre>";
	 	die();
		 */
		$query = substr ( $query, 0, - 1 );
		$statement = $connection->prepare ( $query );
		$statement->execute ();
	}
	static public function GetRecentLimitExceeds(){
				
		$previous_week = strtotime("-1 week +1 day"); //echo $previous_week . "</br>";
		$start_week = strtotime("last sunday midnight",$previous_week); //echo $start_week. "</br>" ;
		$startTime = date("Y-m-d",$start_week);		
		
		$now = strtotime("now");
		$now = date("Y-m-d", $now);
		
		$c = new Criteria();	 	
		$c->add(TaxibotMissionPeer::START_TIME, $startTime, Criteria::GREATER_THAN);
		$c->add(TaxibotMissionPeer::END_TIME, $now, Criteria::LESS_THAN);
		$missions = TaxibotMissionPeer::doSelect($c);
		
		$recentEvents = array();
		foreach ($missions as $mission) {
			$events = $mission->getTaxibotExceedEvents();
			$tractor = $mission->getTaxibotTractor();
			 
			foreach ($events as $event){	
				$recentEvents[] = array (
						"EXCEED_TYPE" => $event->getExceedType(),
						"AIRCRAFT_TAIL_NUMBER" => $mission->getAircraft()->getTailNumber(),
						"TRACTOR_NAME" => $tractor->getName(),
						"FLIGHT_NUMBER" => $mission->getFlightNumber (),
						"AIRCRAFT_TYPE" => $mission->getAircraft()->getAircraftType()->getName()
				);
			}
		}
		return  $recentEvents;
		
		print "<pre>";		
		print_r($recentEvents);
		print "</pre>";
		die();	
	}
	static public function deleteByMissionId($missionId){
		$connection = Propel::getConnection();
		$query = 'DELETE FROM `taxibot_exceed_event` WHERE `mission_id` = ' . $missionId;
		$statement = $connection->prepare($query);
		$statement->execute();
	}
	 
} // TaxibotExceedEventPeer
