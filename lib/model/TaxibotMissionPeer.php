<?php
require 'lib/model/om/BaseTaxibotMissionPeer.php';

/**
 * Skeleton subclass for performing query and update operations on the 'taxibot_mission' table.
 *
 * TaxibotMission
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Tue Jun 4 11:11:50 2013
 *
 * You should add additional methods to this class to meet the
 * application requirements. This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package lib.model
 */
class TaxibotMissionPeer extends BaseTaxibotMissionPeer {
	
	static public function GetFlightNumbers() {
		$c = new Criteria();
		$c->clearSelectColumns();
		$c->setDistinct(); 
		$c->addSelectColumn(self::FLIGHT_NUMBER);
		$rs = self::doSelectStmt($c); 
		$results = array();
		
		while($row = $rs->fetch(PDO::FETCH_BOTH))
		{
			$results[] = $row['FLIGHT_NUMBER'];
		}	
	
		return $results;
	}
	
	static public function GetTailNumbers() {
		$c = new Criteria();
		$c->clearSelectColumns();
		$c->setDistinct();
		$c->addSelectColumn(self::AIRCRAFT_TAIL_NUMBER);
		$rs = self::doSelectStmt($c);
		$results = array();
	
		while($row = $rs->fetch(PDO::FETCH_BOTH))
		{
			$results[] = $row['AIRCRAFT_TAIL_NUMBER'];
		}
	
		return $results;
	}
	
	static public function GetLastMission() {
		$taxibotMissions = TaxibotMissionPeer::doSelect ( new Criteria () );		
		$count = count($taxibotMissions);
		return $taxibotMissions[$count- 1]; 
	}
	
	static public function MargeMissions($missionsIds) {		
		$missionsCount = count($missionsIds);
		
		$criteria = new Criteria ();		
		foreach ($missionsIds as $missionId){
			$cton2 = $criteria->getNewCriterion(TaxibotMissionPeer::ID, $missionId, Criteria::EQUAL);
			$criteria->addOr($cton2);
		}
		
		$taxibotMissions = TaxibotMissionPeer::doSelect( $criteria );		
		$singleMission = array_shift($taxibotMissions);
		
		$pcm_start = $singleMission->getPcmStart();
		$pcm_end =  $singleMission->getPcmEnd();
		$dcm_start  = $singleMission->getDcmStart();
		$dcm_end =  $singleMission->getDcmEnd();
		$pushback_start  =  $singleMission->getPushbackStart();
		$pushback_end =  $singleMission->getPushbackEnd();
		
		
		
		foreach ($taxibotMissions as $nextMission){
			
			if($singleMission->getPcmStart() == null && $nextMission->getPcmStart() != "") {
				
				
				 
			}
		
			$left_engine_fuel_dcm =  $singleMission->getLeftEngineFuelDcm();
			$right_engine_fuel_dcm =  $singleMission->getRightEngineFuelDcm();
			$left_engine_fuel_pcm =  $singleMission->getLeftEngineFuelPcm();
			$right_engine_fuel_pcm =  $singleMission->getRightEngineFuelPcm();
			$left_engine_fuel_pushback =  $singleMission->getLeftEngineFuelPushback();
			$right_engine_fuel_pushback =  $singleMission->getRightEngineFuelPushback();
			$left_engine_fuel_maint =  $singleMission->getLeftEngineFuelMaint();
			$right_engine_fuel_maint =  $singleMission->getRightEngineFuelMaint();
			$left_engine_hours_pcm =  $singleMission->getLeftEngineHoursPcm();
			$right_engine_hours_pcm =  $singleMission->getRightEngineHoursPcm();
			$left_engine_hours_dcm =  $singleMission->getLeftEngineHoursDcm();
			$right_engine_hours_dcm =  $singleMission->getRightEngineHoursDcm();
			$left_engine_hours_maint =  $singleMission->getLeftEngineHoursMaint();
			$right_engine_hours_maint =  $singleMission->getRightEngineHoursMaint();
			$blf_name  =  $singleMission->getBlfName();
			
			$singleMission->setPcmStart($pcm_start);	
			$singleMission->getPcmEnd();
			$singleMission->getDcmStart();
			$singleMission->getDcmEnd();
			$singleMission->getPushbackStart();
			$singleMission->getPushbackEnd();
			$singleMission->getLeftEngineFuelDcm();
			$singleMission->getRightEngineFuelDcm();
			$singleMission->getLeftEngineFuelPcm();
			$singleMission->getRightEngineFuelPcm();
			$singleMission->getLeftEngineFuelPushback();
			$singleMission->getRightEngineFuelPushback();
			$singleMission->getLeftEngineFuelMaint();
			$singleMission->getRightEngineFuelMaint();
			$singleMission->getLeftEngineHoursPcm();
			$singleMission->getRightEngineHoursPcm();
			$singleMission->getLeftEngineHoursDcm();
			$singleMission->getRightEngineHoursDcm();
			$singleMission->getLeftEngineHoursMaint();
			$singleMission->getRightEngineHoursMaint();
			$singleMission->getBlfName();
		} 
	}
	
	function AddDateTime($first_time, $second_time){	 
		$diff=$first_time->diff($second_time);
		$first_time->add($diff);
		return  $first_time->format("Y-m-d H:m:s");
	}
} // TaxibotMissionPeer
